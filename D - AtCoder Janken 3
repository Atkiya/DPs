#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
using namespace std;
typedef long long ll;
#define cy cout << "YES\n"
#define cn cout << "NO\n"
#define MAX 100005
const int MOD = 1e9+7;
const int MODD = 998244353;


// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>
// using namespace __gnu_pbds;

// template <typename num_t>
// using ordered_set = tree<num_t, null_type, less<num_t>, rb_tree_tag, tree_order_statistics_node_update>;




void solve(){
    int n;
    string s;
    cin>>n>>s;
    
    map<pair<int,char>,int>dp;
    s=' '+s;

    for(int i=1;i<=n;i++){
        if(s[i]=='R'){
            dp[{i,'R'}]=max(dp[{i,'R'}],max(dp[{i-1,'P'}],dp[{i-1,'S'}]));
            dp[{i,'P'}]=max(dp[{i,'P'}],max(dp[{i-1,'R'}],dp[{i-1,'S'}])+1);
        }
        else if(s[i]=='P'){
            dp[{i,'P'}]=max(dp[{i,'P'}],max(dp[{i-1,'R'}],dp[{i-1,'S'}]));
            dp[{i,'S'}]=max(dp[{i,'S'}],max(dp[{i-1,'P'}],dp[{i-1,'R'}])+1);
        }
        else{
            dp[{i,'S'}]=max(dp[{i,'S'}],max(dp[{i-1,'P'}],dp[{i-1,'R'}]));
            dp[{i,'R'}]=max(dp[{i,'R'}],max(dp[{i-1,'P'}],dp[{i-1,'S'}])+1);
        }
    }

    if(s.back()=='P')dp[{n,'R'}]=-1;
    else if(s.back()=='R')dp[{n,'S'}]=-1;
    else dp[{n,'P'}]=-1;

    cout<<max({dp[{n,'P'}],dp[{n,'R'}],dp[{n,'S'}]});
}

 
int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    // freopen("input.txt","r",stdin);
    // freopen("output.txt","w",stdout);  


    int t = 1;
    //cin>>t;
    //int T = 0;
    while(t--) {
        //T++;
        //cout<<"Case "<<T<<": ";
        solve();
    }
    return 0;
}
 
